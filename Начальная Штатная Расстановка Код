&НаСервере
Процедура СоздатьНаСервере()  
	ТестШтатнаяРасстановка = Объект.ШтатнаяРасстановкаДляТеста;	
	НачальнаяШтатнаяРасстановка = Документы.НачальнаяШтатнаяРасстановка.СоздатьДокумент(); 
	НачальнаяШтатнаяРасстановка.Дата = КонецДня(Дата("20221231")); 
	
	// Выполняем общий запрос.  
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПлановыеНачисленияСрезПоследних.Сотрудник КАК Сотрудник,
	|	КадроваяИсторияСотрудниковСрезПоследних.Подразделение КАК Подразделение,
	|	КадроваяИсторияСотрудниковСрезПоследних.Должность КАК Должность,
	|	КадроваяИсторияСотрудниковСрезПоследних.ДолжностьПоШтатномуРасписанию КАК ДолжностьПоШтатномуРасписанию,
	|	ПлановыеАвансыСрезПоследних.СпособРасчетаАванса КАК СпособРасчетаАванса,
	|	ПлановыеАвансыСрезПоследних.Аванс КАК Аванс,
	|	ВидыЗанятостиСотрудниковСрезПоследних.ВидЗанятости КАК ВидЗанятости,
	|	ПорядокРасчетаСтоимостиЕдиницыВремениСотрудниковСрезПоследних.ПорядокРасчета КАК ПорядокРасчета,
	|	МАКСИМУМ(ПлановыеНачисленияСрезПоследних.Размер) КАК Размер,
	|	РабочиеМестаСотрудниковСрезПоследних.РабочееМесто КАК РабочееМесто,
	|	ГрейдыПозиций.Грейд КАК Грейд,
	|	ГрафикРаботыСотрудниковСрезПоследних.ГрафикРаботы КАК ГрафикРаботы,
	|	КадроваяИсторияСотрудниковСрезПоследних.ВидСобытия КАК ВидСобытия,
	|	СтавкаПериодСтажа.КоличествоСтавок КАК КоличествоСтавок
	|ИЗ
	|	РегистрСведений.ПлановыеАвансы.СрезПоследних(&Дата, ) КАК ПлановыеАвансыСрезПоследних
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПлановыеНачисления.СрезПоследних(&Дата, ) КАК ПлановыеНачисленияСрезПоследних
	|		ПО ПлановыеАвансыСрезПоследних.Сотрудник = ПлановыеНачисленияСрезПоследних.Сотрудник
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВидыЗанятостиСотрудников.СрезПоследних(&Дата, ) КАК ВидыЗанятостиСотрудниковСрезПоследних
	|		ПО ПлановыеАвансыСрезПоследних.Сотрудник = ВидыЗанятостиСотрудниковСрезПоследних.Сотрудник
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КадроваяИсторияСотрудников.СрезПоследних(&Дата, ) КАК КадроваяИсторияСотрудниковСрезПоследних
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГрейдыПозиций КАК ГрейдыПозиций
	|			ПО КадроваяИсторияСотрудниковСрезПоследних.Должность = ГрейдыПозиций.Позиция
	|		ПО ПлановыеАвансыСрезПоследних.Сотрудник = КадроваяИсторияСотрудниковСрезПоследних.Сотрудник
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокРасчетаСтоимостиЕдиницыВремениСотрудников.СрезПоследних КАК ПорядокРасчетаСтоимостиЕдиницыВремениСотрудниковСрезПоследних
	|		ПО ПлановыеАвансыСрезПоследних.Сотрудник = ПорядокРасчетаСтоимостиЕдиницыВремениСотрудниковСрезПоследних.Сотрудник
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РабочиеМестаСотрудников.СрезПоследних(&Дата, ) КАК РабочиеМестаСотрудниковСрезПоследних
	|		ПО ПлановыеАвансыСрезПоследних.Сотрудник = РабочиеМестаСотрудниковСрезПоследних.Сотрудник
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГрафикРаботыСотрудников.СрезПоследних(&Дата, ) КАК ГрафикРаботыСотрудниковСрезПоследних
	|		ПО ПлановыеАвансыСрезПоследних.Сотрудник = ГрафикРаботыСотрудниковСрезПоследних.Сотрудник
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ПараметрыПериодовСтажаПФР.Сотрудник КАК Сотрудник,
	|			ПараметрыПериодовСтажаПФР.КоличествоСтавок КАК КоличествоСтавок
	|		ИЗ
	|			РегистрСведений.ПараметрыПериодовСтажаПФР КАК ПараметрыПериодовСтажаПФР
	|		ГДЕ
	|			НЕ ПараметрыПериодовСтажаПФР.КоличествоСтавок = 0
	|			И ПараметрыПериодовСтажаПФР.Регистратор.Дата <= &Дата) КАК СтавкаПериодСтажа
	|		ПО ПлановыеАвансыСрезПоследних.Сотрудник = СтавкаПериодСтажа.Сотрудник
	|ГДЕ
	|	ПлановыеАвансыСрезПоследних.ГоловнаяОрганизация = &ГоловнаяОрганизация
	|	И НЕ КадроваяИсторияСотрудниковСрезПоследних.ВидСобытия = &ВидСобытия
	|
	|СГРУППИРОВАТЬ ПО
	|	ПлановыеНачисленияСрезПоследних.Сотрудник,
	|	КадроваяИсторияСотрудниковСрезПоследних.Подразделение,
	|	КадроваяИсторияСотрудниковСрезПоследних.Должность,
	|	КадроваяИсторияСотрудниковСрезПоследних.ДолжностьПоШтатномуРасписанию,
	|	ПлановыеАвансыСрезПоследних.СпособРасчетаАванса,
	|	ПлановыеАвансыСрезПоследних.Аванс,
	|	ВидыЗанятостиСотрудниковСрезПоследних.ВидЗанятости,
	|	ПорядокРасчетаСтоимостиЕдиницыВремениСотрудниковСрезПоследних.ПорядокРасчета,
	|	РабочиеМестаСотрудниковСрезПоследних.РабочееМесто,
	|	ГрейдыПозиций.Грейд,
	|	ГрафикРаботыСотрудниковСрезПоследних.ГрафикРаботы,
	|	КадроваяИсторияСотрудниковСрезПоследних.ВидСобытия,
	|	СтавкаПериодСтажа.КоличествоСтавок";
	Запрос.УстановитьПараметр("Дата", КонецДня(Дата("20221231"))); 
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", Объект.Организация); 
	Запрос.УстановитьПараметр("ВидСобытия", Перечисления.ВидыКадровыхСобытий.Увольнение);
	
	
	Результат = Запрос.ВыполнитьПакет();
	Выборка = Результат[0].Выбрать();
	НачальнаяШтатнаяРасстановка.Месяц = Дата("20221231");
	НачальнаяШтатнаяРасстановка.Организация = Объект.Организация; 
	ИдентификаторСВР = 1;
	ИдентификаторСВРЛ = 1;
	//ИдентификаторСВРП =1;
	Пока Выборка.Следующий() Цикл
		///// Добавляем в табличную часть документа Сотрудники 
		СтрокаТабличнойЧасти = НачальнаяШтатнаяРасстановка.Сотрудники.Добавить(); 	
		
		СтрокаТабличнойЧасти.Сотрудник = Выборка.Сотрудник;
		СтрокаТабличнойЧасти.Подразделение = Выборка.Подразделение;
		СтрокаТабличнойЧасти.Должность = Выборка.Должность;
		СтрокаТабличнойЧасти.ДолжностьПоШтатномуРасписанию = Выборка.ДолжностьПоШтатномуРасписанию;
		СтрокаТабличнойЧасти.КоличествоСтавок = Выборка.КоличествоСтавок;
		СтрокаТабличнойЧасти.СпособРасчетаАванса = Выборка.СпособРасчетаАванса;
		СтрокаТабличнойЧасти.Аванс = Выборка.Аванс;
		СтрокаТабличнойЧасти.ВидЗанятости = Выборка.ВидЗанятости;
		СтрокаТабличнойЧасти.ПорядокРасчетаСтоимостиЕдиницыВремени = Выборка.ПорядокРасчета;
		СтрокаТабличнойЧасти.СовокупнаяТарифнаяСтавка = Выборка.Размер;
		СтрокаТабличнойЧасти.Грейд = Выборка.Грейд;
		СтрокаТабличнойЧасти.РабочееМесто = Выборка.РабочееМесто;
		СтрокаТабличнойЧасти.ГрафикРаботы = Выборка.ГрафикРаботы;
		
		//Выполняем запрос по таблице Начислений.
		ЗапросНачислений = Новый Запрос;
		ЗапросНачислений.Текст = "ВЫБРАТЬ
		|	ПлановыеНачисленияСрезПоследних.Размер КАК Размер,
		|	ПлановыеНачисленияСрезПоследних.Начисление КАК Начисление,
		|	КадроваяИсторияСотрудниковСрезПоследних.Сотрудник КАК Сотрудник
		|ИЗ
		|	РегистрСведений.КадроваяИсторияСотрудников.СрезПоследних(&Дата, ) КАК КадроваяИсторияСотрудниковСрезПоследних
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПлановыеНачисления.СрезПоследних(&Дата, ) КАК ПлановыеНачисленияСрезПоследних
		|		ПО КадроваяИсторияСотрудниковСрезПоследних.Сотрудник = ПлановыеНачисленияСрезПоследних.Сотрудник
		|ГДЕ
		|	КадроваяИсторияСотрудниковСрезПоследних.ГоловнаяОрганизация = &ГоловнаяОрганизация
		|	И КадроваяИсторияСотрудниковСрезПоследних.Сотрудник = &Сотрудник"; 
		
		ЗапросНачислений.УстановитьПараметр("Дата", КонецДня(Дата("20221231"))); 
		ЗапросНачислений.УстановитьПараметр("ГоловнаяОрганизация", Объект.Организация);
		ЗапросНачислений.УстановитьПараметр("Сотрудник", Выборка.Сотрудник);
		РезультатНачисления = ЗапросНачислений.Выполнить().Выбрать();
		Пока РезультатНачисления.Следующий() Цикл 
			///////////Добавляем в табличную часть документа Начисления	
			СтрокаТабличнойЧасти = НачальнаяШтатнаяРасстановка.Начисления.Добавить();
			СтрокаТабличнойЧасти.Сотрудник = РезультатНачисления.Сотрудник;
			СтрокаТабличнойЧасти.Начисление = РезультатНачисления.Начисление;
			СтрокаТабличнойЧасти.ИдентификаторСтрокиВидаРасчета = ИдентификаторСВР;
			СтрокаТабличнойЧасти.Размер = РезультатНачисления.Размер;
			//СтрокаТабличнойЧасти.ДатаНачала = РезультатНачисления.Начало;
			//СтрокаТабличнойЧасти.ДатаОкончания = РезультатНачисления.Окончание;  
			
			ИдентификаторСВР = ИдентификаторСВР +1;
		КонецЦикла;	
		
		//Выполняем запрос по таблице Показатели.
		ЗапросПоказатели = Новый Запрос;
		ЗапросПоказатели.Текст = "ВЫБРАТЬ
		|	ЗначенияПериодическихПоказателейРасчетаЗарплатыСотрудниковСрезПоследних.Значение КАК Значение,
		|	ЗначенияПериодическихПоказателейРасчетаЗарплатыСотрудниковСрезПоследних.Показатель КАК Показатель,
		|	КадроваяИсторияСотрудниковСрезПоследних.Сотрудник КАК Сотрудник
		|ИЗ
		|	РегистрСведений.КадроваяИсторияСотрудников.СрезПоследних(&Дата, ) КАК КадроваяИсторияСотрудниковСрезПоследних
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияПериодическихПоказателейРасчетаЗарплатыСотрудников.СрезПоследних(&Дата, ) КАК ЗначенияПериодическихПоказателейРасчетаЗарплатыСотрудниковСрезПоследних
		|		ПО КадроваяИсторияСотрудниковСрезПоследних.Сотрудник = ЗначенияПериодическихПоказателейРасчетаЗарплатыСотрудниковСрезПоследних.Сотрудник
		|ГДЕ
		|	КадроваяИсторияСотрудниковСрезПоследних.ГоловнаяОрганизация = &ГоловнаяОрганизация
		|	И КадроваяИсторияСотрудниковСрезПоследних.Сотрудник = &Сотрудник"; 
		
		ЗапросПоказатели.УстановитьПараметр("Дата", КонецДня(Дата("20221231"))); 
		ЗапросПоказатели.УстановитьПараметр("ГоловнаяОрганизация", Объект.Организация);
		ЗапросПоказатели.УстановитьПараметр("Сотрудник", Выборка.Сотрудник);
		РезультатПоказатели = ЗапросПоказатели.Выполнить().Выбрать();
		Пока РезультатПоказатели.Следующий() Цикл
			///////////Показатели
			СтрокаТабличнойЧасти = НачальнаяШтатнаяРасстановка.Показатели.Добавить();
			
			//Если ЗапросНачислений.Начисление = ПланВидовРасчетовСсылка.Начисления И Запро 
				
				
			СтрокаТабличнойЧасти.Сотрудник = РезультатПоказатели.Сотрудник;
			СтруктураОтбора = Новый Структура;
			СтруктураОтбора.Вставить("Сотрудник",РезультатПоказатели.Сотрудник);
			Если РезультатПоказатели.Показатель = Справочники.ПоказателиРасчетаЗарплаты.РайонныйКоэффициент Тогда
				СтруктураОтбора.Вставить("Начисление",ПланыВидовРасчета.Начисления.НайтиПоНаименованию("Районный коэффициент"));
			ИначеЕсли РезультатПоказатели.Показатель = Справочники.ПоказателиРасчетаЗарплаты.Оклад Тогда  
				СтруктураОтбора.Вставить("Начисление",ПланыВидовРасчета.Начисления.НайтиПоНаименованию("Оплата по окладу"));
			КонецЕсли;
			
				
			СтрокиМассив = НачальнаяШтатнаяРасстановка.Начисления.НайтиСтроки(СтруктураОтбора);
			Если СтрокиМассив.Количество() >0 Тогда 
				СтрокаТабличнойЧасти.ИдентификаторСтрокиВидаРасчета = СтрокиМассив[0].ИдентификаторСтрокиВидаРасчета;
			КонецЕсли;
			//СтрокаТабличнойЧасти.ИдентификаторСтрокиВидаРасчета = ИдентификаторСВРП;
			СтрокаТабличнойЧасти.Показатель = РезультатПоказатели.Показатель;
			СтрокаТабличнойЧасти.Значение = РезультатПоказатели.Значение;
			
			//ИдентификаторСВРП = ИдентификаторСВРП +1;
		КонецЦикла;	
		
		
		
		
		
		
		//Выполняем запрос по таблицам Льготы.
		ЗапросЛьготы = Новый Запрос;
		ЗапросЛьготы.Текст = "ВЫБРАТЬ
   |	ПакетыЛьготСотрудникамПоШтатномуРасписанию.Льгота КАК Льгота,
   |	ПакетыЛьготСотрудникамПоШтатномуРасписанию.Размер КАК РазмерЛьготы,
   |	КадроваяИсторияСотрудниковСрезПоследних.Сотрудник КАК Сотрудник
   |ИЗ
   |	РегистрСведений.КадроваяИсторияСотрудников.СрезПоследних(&Дата, ) КАК КадроваяИсторияСотрудниковСрезПоследних
   |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПакетыЛьготСотрудникамПоШтатномуРасписанию КАК ПакетыЛьготСотрудникамПоШтатномуРасписанию
   |		ПО КадроваяИсторияСотрудниковСрезПоследних.Должность = ПакетыЛьготСотрудникамПоШтатномуРасписанию.Должность
   |ГДЕ
   |	КадроваяИсторияСотрудниковСрезПоследних.ГоловнаяОрганизация = &ГоловнаяОрганизация
   |	И КадроваяИсторияСотрудниковСрезПоследних.Сотрудник = &Сотрудник"; 
		
		ЗапросЛьготы.УстановитьПараметр("Дата", КонецДня(Дата("20221231"))); 
		ЗапросЛьготы.УстановитьПараметр("ГоловнаяОрганизация", Объект.Организация);
		ЗапросЛьготы.УстановитьПараметр("Сотрудник", Выборка.Сотрудник);
		РезультатЛьготы = ЗапросЛьготы.Выполнить().Выбрать();
		Пока РезультатЛьготы.Следующий() Цикл			
			//Таблица Льготы 
			//Если РезультатНачисления.Размер = РезультатНачисления.РазмерЛьготы Тогда
			СтрокаТабличнойЧасти = НачальнаяШтатнаяРасстановка.Льготы.Добавить();
			СтрокаТабличнойЧасти.Сотрудник = РезультатЛьготы.Сотрудник;
			СтрокаТабличнойЧасти.Льгота = РезультатЛьготы.РазмерЛьготы;
			СтрокаТабличнойЧасти.ИдентификаторСтрокиВидаРасчета = ИдентификаторСВРЛ+ 10000;
			СтрокаТабличнойЧасти.Размер = РезультатЛьготы.РазмерЛьготы;   
			//КонецЕсли;
			
			
			ИдентификаторСВРЛ = ИдентификаторСВРЛ + 1;
			
		КонецЦикла; 
		
		//Запросом получаем таблицу ЕжегодныеОтпуска	
		ЗапросВидЕжегодногоОтпуска = Новый Запрос;
		ЗапросВидЕжегодногоОтпуска.Текст = "ВЫБРАТЬ
   |	ПоложенныеВидыЕжегодныхОтпусковСрезПоследних.ВидЕжегодногоОтпуска КАК ВидЕжегодногоОтпуска,
   |	ПоложенныеВидыЕжегодныхОтпусковСрезПоследних.КоличествоДнейВГод КАК КоличествоДнейВГод,
   |	ПоложенныеВидыЕжегодныхОтпусковСрезПоследних.Период КАК ДатаОстатка,
   |	ПоложенныеВидыЕжегодныхОтпусковСрезПоследних.Сотрудник КАК Сотрудник,
   |	ПоложенныеВидыЕжегодныхОтпусковСрезПоследних.КоличествоДнейВГодПоОкончании КАК КоличествоДней
   |ИЗ
   |	РегистрСведений.КадроваяИсторияСотрудников.СрезПоследних(&Дата, ) КАК КадроваяИсторияСотрудниковСрезПоследних
   |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПоложенныеВидыЕжегодныхОтпусков.СрезПоследних(&Дата, ) КАК ПоложенныеВидыЕжегодныхОтпусковСрезПоследних
   |		ПО КадроваяИсторияСотрудниковСрезПоследних.Сотрудник = ПоложенныеВидыЕжегодныхОтпусковСрезПоследних.Сотрудник
   |ГДЕ
   |	КадроваяИсторияСотрудниковСрезПоследних.ГоловнаяОрганизация = &ГоловнаяОрганизация
   |	И КадроваяИсторияСотрудниковСрезПоследних.Сотрудник = &Сотрудник";
		ЗапросВидЕжегодногоОтпуска.УстановитьПараметр("Дата", КонецДня(Дата("20221231"))); 
		ЗапросВидЕжегодногоОтпуска.УстановитьПараметр("ГоловнаяОрганизация", Объект.Организация);
		ЗапросВидЕжегодногоОтпуска.УстановитьПараметр("Сотрудник", Выборка.Сотрудник);
		РезультатЕжегодныеОтпуска = ЗапросВидЕжегодногоОтпуска.Выполнить().Выбрать();
		Пока РезультатЕжегодныеОтпуска.Следующий() Цикл	
			/////////////ЕжегодныеОтпуска
			СтрокаТабличнойЧасти = НачальнаяШтатнаяРасстановка.ЕжегодныеОтпуска.Добавить();
			СтрокаТабличнойЧасти.Сотрудник = РезультатЕжегодныеОтпуска.Сотрудник;
			СтрокаТабличнойЧасти.ВидЕжегодногоОтпуска = РезультатЕжегодныеОтпуска.ВидЕжегодногоОтпуска;
			СтрокаТабличнойЧасти.КоличествоДнейВГод = РезультатЕжегодныеОтпуска.КоличествоДнейВГод;
			СтрокаТабличнойЧасти.ДатаОстатка = РезультатЕжегодныеОтпуска.ДатаОстатка;
			СтрокаТабличнойЧасти.КоличествоДней = РезультатЕжегодныеОтпуска.КоличествоДней;
			//СтрокаТабличнойЧасти.НеИспользовать = Выборка.НеИспользовать;
		КонецЦикла; 
		
		//Выполняем запрос по таблицам Физ. Лиц.
		ЗапросФизлиц = Новый Запрос;
		ЗапросФизлиц.Текст = "ВЫБРАТЬ
		|	КадроваяИсторияСотрудниковСрезПоследних.ФизическоеЛицо КАК ФизическоеЛицо
		|ИЗ
		|	РегистрСведений.КадроваяИсторияСотрудников.СрезПоследних(&Дата, ) КАК КадроваяИсторияСотрудниковСрезПоследних
		|ГДЕ
		|	КадроваяИсторияСотрудниковСрезПоследних.Сотрудник = &Сотрудник
		|	И КадроваяИсторияСотрудниковСрезПоследних.ГоловнаяОрганизация = &ГоловнаяОрганизация";
		
		ЗапросФизлиц.УстановитьПараметр("Дата", КонецДня(Дата("20221231"))); 
		ЗапросФизлиц.УстановитьПараметр("ГоловнаяОрганизация", Объект.Организация);
		ЗапросФизлиц.УстановитьПараметр("Сотрудник", Выборка.Сотрудник);
		РезультатаФизЛиц = ЗапросФизлиц.Выполнить().Выбрать();
		Пока РезультатаФизЛиц.Следующий() Цикл	
			/////////////ФизическиеЛица
			СтрокаТабличнойЧасти = НачальнаяШтатнаяРасстановка.ФизическиеЛица.Добавить();
			СтрокаТабличнойЧасти.ФизическоеЛицо = РезультатаФизЛиц.ФизическоеЛицо;	
		КонецЦикла;
		
		//ОстаткиОтпусковПоРабочимГодам запрос
		ЗапросОстаткиОтпусковПоРабочимГодам = Новый Запрос;
		ЗапросОстаткиОтпусковПоРабочимГодам.Текст = "ВЫБРАТЬ
		|	НачальныеОстаткиОтпусков.РабочийГодНачало КАК РабочийГодНачало,
		|	НачальныеОстаткиОтпусков.РабочийГодОкончание КАК РабочийГодОкончание,
		|	НачальныеОстаткиОтпусков.КоличествоДней КАК Остаток,
		|	НачальныеОстаткиОтпусков.ВидЕжегодногоОтпуска КАК ВидЕжегодногоОтпуска,
		|	НачальныеОстаткиОтпусков.Сотрудник КАК Сотрудник,
		|	НачальныеОстаткиОтпусков.ДатаОстатка КАК ДатаОстатка
		|ИЗ
		|	РегистрСведений.КадроваяИсторияСотрудников.СрезПоследних(&Дата, ) КАК КадроваяИсторияСотрудниковСрезПоследних
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НачальныеОстаткиОтпусков КАК НачальныеОстаткиОтпусков
		|		ПО КадроваяИсторияСотрудниковСрезПоследних.Сотрудник = НачальныеОстаткиОтпусков.Сотрудник
		|ГДЕ
		|	НачальныеОстаткиОтпусков.Сотрудник = &Сотрудник
		|	И КадроваяИсторияСотрудниковСрезПоследних.ГоловнаяОрганизация = &ГоловнаяОрганизация";
		ЗапросОстаткиОтпусковПоРабочимГодам.УстановитьПараметр("Дата", КонецДня(Дата("20221231"))); 
		ЗапросОстаткиОтпусковПоРабочимГодам.УстановитьПараметр("ГоловнаяОрганизация", Объект.Организация);
		ЗапросОстаткиОтпусковПоРабочимГодам.УстановитьПараметр("Сотрудник", Выборка.Сотрудник);
		РезультатОтпусковПоРабочимГодам = ЗапросОстаткиОтпусковПоРабочимГодам.Выполнить().Выбрать();
		Пока РезультатОтпусковПоРабочимГодам.Следующий() Цикл
			
			//
			/////////////ОстаткиОтпусковПоРабочимГодам
			СтрокаТабличнойЧасти = НачальнаяШтатнаяРасстановка.ОстаткиОтпусковПоРабочимГодам.Добавить();
			СтрокаТабличнойЧасти.Сотрудник = РезультатОтпусковПоРабочимГодам.Сотрудник;
			СтрокаТабличнойЧасти.ВидЕжегодногоОтпуска = РезультатОтпусковПоРабочимГодам.ВидЕжегодногоОтпуска;
			СтрокаТабличнойЧасти.ДатаОстатка = РезультатОтпусковПоРабочимГодам.ДатаОстатка;
			СтрокаТабличнойЧасти.РабочийГодНачало = РезультатОтпусковПоРабочимГодам.РабочийГодНачало;
			СтрокаТабличнойЧасти.РабочийГодОкончание = РезультатОтпусковПоРабочимГодам.РабочийГодОкончание;
			СтрокаТабличнойЧасти.Остаток = РезультатОтпусковПоРабочимГодам.Остаток; 
			
		КонецЦикла;
		
		// Запрос ОтсутствияСдвигающиеРабочийГод
		ЗапросОтсутствияСдвигающиеРабочийГод = Новый Запрос;
		ЗапросОтсутствияСдвигающиеРабочийГод.Текст = "ВЫБРАТЬ
     |	ОтсутствияСдвигающиеРабочийГод.Сотрудник КАК Сотрудник,
     |	ОтсутствияСдвигающиеРабочийГод.ВидЕжегодногоОтпуска КАК ВидЕжегодногоОтпуска,
     |	ОтсутствияСдвигающиеРабочийГод.ДатаОстатка КАК ДатаОстатка,
     |	ОтсутствияСдвигающиеРабочийГод.Состояние КАК Состояние,
     |	ОтсутствияСдвигающиеРабочийГод.КоличествоДней КАК КоличествоДней
     |ИЗ
     |	РегистрСведений.ОтсутствияСдвигающиеРабочийГод КАК ОтсутствияСдвигающиеРабочийГод
     |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КадроваяИсторияСотрудников.СрезПоследних(&Дата, ) КАК КадроваяИсторияСотрудниковСрезПоследних
     |		ПО ОтсутствияСдвигающиеРабочийГод.Сотрудник = КадроваяИсторияСотрудниковСрезПоследних.Сотрудник
     |ГДЕ
     |	КадроваяИсторияСотрудниковСрезПоследних.Сотрудник = &Сотрудник
     |	И КадроваяИсторияСотрудниковСрезПоследних.ГоловнаяОрганизация = &ГоловнаяОрганизация";
		
		ЗапросОтсутствияСдвигающиеРабочийГод.УстановитьПараметр("Дата", КонецДня(Дата("20221231"))); 
		ЗапросОтсутствияСдвигающиеРабочийГод.УстановитьПараметр("ГоловнаяОрганизация", Объект.Организация);
		ЗапросОтсутствияСдвигающиеРабочийГод.УстановитьПараметр("Сотрудник", Выборка.Сотрудник);
		РезультатаОтсутствияСдвигающиеРабочийГод = ЗапросОтсутствияСдвигающиеРабочийГод.Выполнить().Выбрать();
		Пока РезультатаОтсутствияСдвигающиеРабочийГод.Следующий() Цикл
			/////////////ОтсутствияСдвигающиеРабочийГод
			//
			СтрокаТабличнойЧасти = НачальнаяШтатнаяРасстановка.ОтсутствияСдвигающиеРабочийГод.Добавить();
			СтрокаТабличнойЧасти.Сотрудник = РезультатаОтсутствияСдвигающиеРабочийГод.Сотрудник;
			СтрокаТабличнойЧасти.ВидЕжегодногоОтпуска = РезультатаОтсутствияСдвигающиеРабочийГод.ВидЕжегодногоОтпуска;
			СтрокаТабличнойЧасти.ДатаОстатка = РезультатаОтсутствияСдвигающиеРабочийГод.ДатаОстатка;
			СтрокаТабличнойЧасти.Состояние = РезультатаОтсутствияСдвигающиеРабочийГод.Состояние;
			СтрокаТабличнойЧасти.КоличествоДней = РезультатаОтсутствияСдвигающиеРабочийГод.КоличествоДней; 
			
			
		КонецЦикла;
	КонецЦикла;
	
	
	
	//Записываем документ
	//НачальнаяШтатнаяРасстановка.Записать(РежимЗаписиДокумента.Проведение);
	
	//НачальнаяШтатнаяРасстановка.Записать();
КонецПроцедуры

&НаКлиенте
Процедура Создать(Команда)
	СоздатьНаСервере();
	Сообщить("Выполнено");
КонецПроцедуры

/////



